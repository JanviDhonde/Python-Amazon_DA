# -*- coding: utf-8 -*-
"""Amazon Sale Report.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w6jhUKPRy4sqKxRk_m92Ngk9i3OK6eO_

***Import Libraries***
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns

df=pd.read_csv('Amazon Sale Report.csv',encoding= 'unicode_escape')

df.shape

df.head(2)

df.tail(2)

df.info()

#drop unrelated/blank columns
df.drop(['New','PendingS'], axis=1, inplace=True)

df.info()

pd.isnull(df)
# checking null value

"""***Data Cleaning***"""

pd.isnull(df).sum()
# sum will give total values of null values

df.shape

#drop null values
df.dropna(inplace=True)

df.shape

df.columns

# change data type
df['ship-postal-code']=df['ship-postal-code'].astype('int')

#checking whether the  data type change or not
df['ship-postal-code'].dtype

df['Date']=pd.to_datetime (df['Date'])

df.columns

#rename Columns
df.rename(columns={'Qty':'Quantity'})

#describe() method return description of the data in the DataFrame(i.e count,mean,std,min..etc)
df.describe()

df.describe(include='object')

#use describe() for specific columns
df[['Qty','Amount']].describe()

"""***(EDA) Exploratory Data Analysis***"""

df.columns

"""***Size***"""

ax = sns.countplot(x='Size', data=df, palette='viridis')
plt.xlabel('Size')
plt.ylabel('Count')
plt.title('Size')
plt.show()

ax=sns.countplot(x='Size' ,data=df, palette='viridis')
for bars in ax.containers:
    ax.bar_label(bars)
plt.xlabel('Size')
plt.ylabel('Count')
plt.title('Size')
plt.show()

"""***Note: From above Graph you can see that most of the people buys M-Size***

***Group By: The groupby() function in pandas is used to group data based on one or more columns in a DataFrame***
"""

df.groupby(['Size'], as_index=False)['Qty'].sum().sort_values(by='Qty',ascending=False)

S_Qty = df.groupby(['Size'], as_index=False)['Qty'].sum().sort_values(by='Qty', ascending=False)
sns.barplot(x='Size', y='Qty', data=S_Qty, palette='viridis')
plt.xlabel('Size')
plt.ylabel('Qty')
plt.title('Qty')
plt.show()

"""***Note: From above Graph you can see that most of the Qty buys M-Size in the sales***

***Courier Status***
"""

sns.countplot(data=df, x='Courier Status',hue= 'Status')
plt.xlabel('Courier Status')
plt.ylabel('Count')
plt.title('Courier Status')
plt.show()

plt.figure()
ax=sns.countplot(data=df, x='Courier Status',hue= 'Status')
for bars in ax.containers:
    ax.bar_label(bars)
plt.xlabel('Courier Status')
plt.ylabel('Count')
plt.title('Courier Status')
plt.show()

"""***Note: From above Graph the majority of the orders are shipped through the courier.***"""

#histogram
df['Size'].hist()
plt.xlabel('Size', color='black')
plt.ylabel('Count')
plt.title('Size')
plt.show()

df['Category'] = df['Category'].astype(str)
column_data = df['Category']
plt.figure()
plt.hist(column_data, bins=30, edgecolor='Black')
plt.xticks(rotation=90)
plt.xlabel('Category')
plt.ylabel('Count')
plt.title('Category')
plt.show()

"""***Note: From above Graph you can see that most of the  buyers are T-shirt***"""

# Checking B2B Data  by using pie chart
B2B_Check = df['B2B'].value_counts()

#  Plot the pie chart
plt.pie(B2B_Check, labels=B2B_Check, autopct='%1.1f%%')
#plt.axis('equal')
plt.show()

# Checking B2B Data  by using pie chart
B2B_Check = df['B2B'].value_counts()

#  Plot the pie chart
plt.pie(B2B_Check, labels=B2B_Check.index, autopct='%1.1f%%')
#plt.axis('equal')
plt.show()

"""***Note : From above chart  we can see that maximum i.e. 99.3% of buyers are retailers and 0.7% are B2B buyers***"""

#  Prepare data for pie chart
a1 = df['Fulfilment'].value_counts()

# Step 4: Plot the pie chart
fig, ax = plt.subplots()

ax.pie(a1, labels=a1.index, autopct='%1.1f%%', radius=0.7, wedgeprops=dict(width=0.6))
ax.set(aspect="equal")

plt.show()

"""***Note: From above chart you can see that most of the  Fulfilment  are  amazon***"""

# Prepare data for scatter plot
x_data = df['Category']
y_data = df['Size']

# Plot the scatter plot
plt.scatter(x_data, y_data)
plt.xlabel('Category ')
plt.ylabel('Size')
plt.title('Scatter Plot')
plt.show()

# Plot count of cities by state
plt.figure(figsize=(12, 6))
sns.countplot(data=df, x='ship-state', palette="viridis")
plt.xlabel('ship-state')
plt.ylabel('count')
plt.title('Distribution of State')
plt.xticks(rotation=90)
plt.show()

# top_10_States
top_10_state = df['ship-state'].value_counts().head(10)
# Plot count of cities by state
plt.figure(figsize=(10, 4))
sns.countplot(data=df[df['ship-state'].isin(top_10_state.index)], x='ship-state', palette="viridis")
plt.xlabel('ship-state')
plt.ylabel('count')
plt.title('Distribution of  State')
plt.xticks(rotation=45)
plt.show()

"""***Note: From above Graph you can see that most of the  buyers are Maharashtra state***

***Conclusion: The data analysis reveals that the business has a significant customer base in Maharashtra state, mainly serves retailers, fulfills orders through Amazon, experiences high demand for T-shirts, and sees M-Size as the preferred choice among buyers.***
"""